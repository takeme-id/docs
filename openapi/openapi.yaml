openapi: 3.0.0
servers:
  - url: //api.takeme.id/api/v1
    description: Production URL
  - url: //api.takeme.id/dev/api/v1
    description: Sandbox URL
info:
  description: |
    This is a documentation for takeme rest API.
    You can use the library we provide but the library / sdk actually also calls this api.
    You must have received an authorization key `corporate` and `secret` from us to access our feature.
    Documentation is also **available in postman collection version** click here to [download](https://www.solarnetgroup.com/)

    # Introduction
    Hello!! Welcome to Takeme API documentation. We will help you by providing financial 
    functions that help you **receive payments**, **send payments**, **transfer between your organization**, **pay bills** and **budgeting**. 
    Takeme is also good for you if you want to build a **financial platform** for your client / organizations. Our API is easy to understand by machine / human, 
    we uses common standard and HTTP response codes to indicate API errors. JSON is returned by all API responses, including errors. We also provide a sandbox 
    environment so you can try our features without using real money

    # Main Concept
    After you [create an account](https://www.solarnetgroup.com/), your account will be registered as a corporate. Corporate can have sub account / user **(we call it user)**. 
    Corporate and user almost have the same function. However, corporates can do more initiatives with their users. **You can ignore user concepts** 
    if in your case it doesn't exist

    # Authentication
    Make sure that you have [registered](https://www.solarnetgroup.com/) an account, you can obtain and manage your keys in [dashboard](https://www.solarnetgroup.com/).
    There are some keys that you will get from us

    | Key                       | Description                                                                                                                             |
    | ----------------          | ----------------------------------                                                                                                      |
    | `corporate`               | Account id or identity                                                                                             |
    | `secret`                  | Use this for generate signature, [read more about signature](#section/Authentication/Signature)   |
    | `callback-token`          | A value for you callback endpoint to authenticate the incoming request is the real from us, [read more](https://www.solarnetgroup.com/) |


    Use `corproate` and `secret` to provide the header below. You must provide this header for every your request header
    
    | Header                    | Type                               | Description                               |
    | ------------------------- | ---------------------------------- | ----------------------------------------- |
    | Content-Type              | application/json                   | Is representation header is used to indicate the original media type of the resource |
    | Accept-Language           | Enum: `en` or `id`                  | Language of response. The default language is `en`. [Click here for more](#section/Language-Options) |
    | corporate                 | String                             | use `corporate` key |
    | requestID                 | String                             | Your request unique id to help us tracing the request |
    | signature                 | String                             | HMACSHA512. Click [here](#section/Authentication/Signature) for detail |

    For transactional request you must add x-transaction-code on the request header

    | Header                    | Type                               | Description                               |
    | ------------------------- | ---------------------------------- | ----------------------------------------- |
    | Content-Type              | application/json                   | Is representation header is used to indicate the original media type of the resource |
    | Accept-Language           | Enum: `en` or `id`                  | Language of response. The default language is `en`. [Click here for more](#section/Language-Options) |
    | corporate                 | String                             | use `corporate` key |
    | requestID                 | String                             | Your request unique id to help us tracing the request |
    | signature                 | String                             | HMACSHA512. [Click here for detail](#section/Authentication/Signature)  |
    | x-transaction-code        | String                             | Encrypted corporate / account PIN [Click here for detail](#section/Authentication/What-is-x-transaction-code)  |


    ## What is x-transaction-code ?
    `x-transaction-code` == **encrypted PIN** <br/>
    Takeme use a PIN to add another layer of authentication. Corporate and user can have their own PIN, **so `x-transaction-code` for corporate and user (sub account) is DIFFERENT**. 
    After you create an account, you must set a PIN for your account / corporate. You can set a PIN via the API or the dashboard. However the API cannot accept plain PIN, 
    you must encrypt the plain PIN using the RSA algorithm encryption. [RSA](https://en.wikipedia.org/wiki/RSA_(cryptosystem)) is asymmetric encryption so you must encrypt your PIN with our public certificate.
    Here's a coding sample how to convert a plain PIN into an x-transaction-code ***(public certificate included on sample)***
    * [Java](https://www.solarnetgroup.com/)
    * [Python](https://www.solarnetgroup.com/)
    * [Javascript](https://www.solarnetgroup.com/)

    **NOTE** : if you won't to using sub account / user you can ignore RSA encryption to simplify integration with us by generating this key from dashboard 
    but if you change PIN or regenerate this then you need to update this also in your code

    ## Signature
    We use signature to validates the authenticity and integrity of your message. You can generate this value by hashing the request body (JSON as string) with HMACSHA512 algorithm. 
    The HMAC process mixes a secret key with the message data and hashes the result. Use the `secret` you got from the dashboard on HMAC process. Here's sample code how to generate signature

    * [Python](https://www.solarnetgroup.com/)
    * [Javascript](https://www.solarnetgroup.com/)


    ## IP Whitelist
    In production environtment you must register ip on dashboard

    ## Authenticate as a User
    If you want to peform request as a user you have to add user JWT (JSON Web Token) to the authorization header

    | Header                    | Type                               | Description                               |
    | ------------------------- | ---------------------------------- | ----------------------------------------- |
    | Content-Type              | application/json                   | Is representation header is used to indicate the original media type of the resource |
    | Accept-Language           | Enum: `en` or `id`                  | Language of response. The default language is `en`. [Click here for more](#section/Language-Options) |
    | corporate                 | String                             | use `corporate` key |
    | requestID                 | String                             | Your request unique id to help us tracing the request |
    | signature                 | String                             | HMACSHA512. [Click here for detail](#section/Authentication/Signature)  |
    | Authorization             | String / JWT                       | Bearer[space]JWT. [Click here for detail](#section/Authentication/What-is-JWT)  |


    For user transactional request you must add encrypted user PIN or `x-transaction-code` on the request header.

    | Header                    | Type                               | Description                               |
    | ------------------------- | ---------------------------------- | ----------------------------------------- |
    | Content-Type              | application/json                   | Is representation header is used to indicate the original media type of the resource |
    | Accept-Language           | Enum: `en` or `id`                  | Language of response. The default language is `en`. [Click here for more](#section/Language-Options) |
    | corporate                 | String                             | use `corporate` key |
    | requestID                 | String                             | Your request unique id to help us tracing the request |
    | signature                 | String                             | HMACSHA512. [Click here for detail](#section/Authentication/Signature)  |
    | Authorization             | String / JWT                       | Bearer[space]JWT. [Click here for detail](#section/Authentication/What-is-JWT)  |
    | x-transaction-code        | String                             | Encrypted user / sub account PIN [Click here for detail](#section/Authentication/What-is-x-transaction-code)  |
  

    ## What is JWT
    JSON Web Token (JWT) is a token you get from return of user login / signup process. All user activity must include this so you should store this token in your database and call it every you perform
    request as a user. JWT can be expired so you need relogin or refresh but you can change limit of expire in [dashboard](https://www.solarnetgroup.com/)


    # Language Options
    There are two language options available:
      - `en` English
      - `id` Bahasa Indonesia

    # Common Errors
    There are some errors that may occur in all endpoints

    | HTTP Status Code          | Error Code                         | Description                               |
    | ------------------------- | ---------------------------------- | ----------------------------------------- |
    | 500                       | 901 - 9xx                          | Something went wrong on takeme / hidden detail error |
    | 401                       | 703                                | Invalid Token / JWT user |
    | 400                       | 829                                | Invalid corporate code, secret, signature |
    | 400                       | 823                                | Corporate locked |
    | 400                       | 819                                | User locked |
    | 400                       | 802                                | Invalid payload  |

    **NOTE** :
      - **Corporate locked because  passing invalid user JWT, invalid secret or signature for several time**
      - **User locked because invalid PIN, face, or login otp for several time**
      - **Invalid payload happend because you send wrong format payload**

    # Status of Transaction
    If the transaction is an inbound transaction then our status will only return a completed status. However, if the transaction is an outbound transaction, we always return the pending status first, until the bank/other party provides an update for related confirmation. 
    After we get updates from other parties then we also notify you via [transaction callbacks](#tag/Callback-Transaction/operation/callbackStatusTransaction).
    
    | Status         | Description          |
    | ------------------------- | -- |
    | `Pending` | Transaction is initiated but not yet completed by bank / others |
    | `Completed` | Bank / others has confirmed transmission of funds |
    | `Refund` | Beneficiary bank returns funds for unspecified reason |
    | `Failed` | Transaction failed for multiple reasons |

  version: 2.3.0
  title: Takeme
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: Help / Feedback 
    email: hello@takeme.id
tags:
  - name: Registration and Verification
    description: Corporate can have sub account or user. User can be your customer or member of your organization. Here everything you need to do for user registration and get the user JWT
  - name: Login / Get JWT
    description: Everything you need to do for user login / get the user JWT
  - name: PIN (User)
    description: Everything you about manage user PIN
  - name: Others (User)
    description: Other user operation 
  - name: PIN
    description: Everything you can do for manage corporate PIN
  - name: Others
    description: Other corporate operation 
  - name: Create Balance / Virtual Account 
    description:  |
      Each registered account (corporate) or sub-account (user) will have its own balance. However if you need a budgeting you can use this multi balance feature. You can also use this 
      feature **if you want to receive payments from your customers without making them as a user**. Whenever fund come to balance (or deducted by corporate) we will notify you via callback [click here for detail](example.com).
      Here's a list of banks in our va
      - MANDIRI
      - BRI
      - BNI
      - PERMATA

  - name: Sharing
    description:  Everything you can do for sharing  balance. This collection API only can do by corporate
  - name: Sharing Balance (Approval)
    description:  Everything you can do for sharing balance with approval from balance owner
  - name: Transfer to Bank
    description:  All about transfers that result in money leaving the system
  - name: Transfer to Balance
    description:  All about transfers that don't result in money leaving the system
  - name: Accept Payment with Card
    description:  All about accept payment with card
  - name: Callback Transaction
    description:  |
      All about callback transaction. You must provide a url so that takeme service can notify your service. Here the notifications you will receive from the callback
      | Activity         | Callback          | 
      | ------------------------- | -- | 
      | When the status of your bank transfer transaction changes (ex : from `Pending` to `Completed`) | Status Callback | 
      | When funds from outside (bank) into your account balance or sub account | Topup Callback |
      | When you topup user balance via dashboard | Topup Callback |
      | When we (as principal) topup your user or corporate balance| Topup Callback |
      | When you deduct user balance via dashboard | Deduct Callback |
      | When we (as principal) deduct your user or corporate balance| Deduct Callback |

      You can set callback url on our dashboard


  - name: Callback Bulk
    description:  |
      All about callback bulk. You must provide a url so that takeme service can notify your service.Here the notifications you will receive from the callback
      | Activity         | Callback          | 
      | ------------------------- | -- | 
      | When bulk inquiry completed| Bulk Inquiry Completed Callback | 

      You can set callback url on our dashboard

x-tagGroups:
  - name: Account / Corporate
    tags:
      - PIN
      - Others
  - name: Transactions
    tags:
      - Transfer to Bank
      - Transfer to Balance
      - Accept Payment with Card
  - name: Balance
    tags:
      - Create Balance / Virtual Account
      - Sharing
      - Sharing Balance (Approval)
  - name: User
    tags:
      - Registration and Verification
      - Login / Get JWT
      - PIN (User)
      - Others (User)
  - name: Callback
    tags:
      - Callback Transaction
      - Callback Bulk

    

paths:
  /uaa/signup/{otp_channel}:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string   
      - name: otp_channel
        in: path
        description: |
          Used channel for sending OTP to phone number. `wa` for Whatsapp `sms` for Short Message Service
        required: true
        schema:
          type: string
          enum:
            - wa
            - sms
    post:
      tags:
        - Registration and Verification
      summary: Create
      description: |
        Create new user, sending OTP for verify phone number then send OTP to the [activation API](#tag/Signup/operation/activateUser) <br/>
        
        Note :
        * **OTP Duration is 2 minutes**	
        * **If user doesn't get otp (or delay) you can retry create user after more than 2 minutes**

      operationId: createUser
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode803'
                  - $ref: '#/components/schemas/ErrorCode882'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'

      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/SignupPayload'

  /uaa/activation:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string   
    post:
      tags:
        - Registration and Verification
      summary: Activation
      description: Afrer you create new user you need activate it with OTP that user got from their phone number
      operationId: activateUser
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100Activation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode804'
                  - $ref: '#/components/schemas/ErrorCode805'
                  - $ref: '#/components/schemas/ErrorCode883'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'

      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/ActivationPayload'

  /user/upgrade:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: Authorization
        in: header
        description: "User JWT with Bearer prefix. [Click here for detail](#section/Authentication/What-is-JWT)"
        example: Bearer s7t3sad...
        required: true
        schema:
          type: string 
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string   
    post:
      tags:
        - Registration and Verification
      summary: Verification / Upgrade
      description: Only verified users can make transactions, here are how to upgrade or verify users
      operationId: upgradeUser
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode896'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/UpgradeUserPayload'

  /uaa/prelogin/{otp_channel}:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string   
      - name: otp_channel
        in: path
        description: |
          Used channel for sending OTP to phone number. `wa` for Whatsapp `sms` for Short Message Service
        required: true
        schema:
          type: string
          enum:
            - wa
            - sms
    post:
      tags:
        - Login / Get JWT
      summary: Prelogin
      description: |
        Before we send you JWT, we need authenticate the user. Call this for request OTP then send OTP to [Login API](#tag/Login-Get-JWT/operation/loginUser)
        Note :
        * **OTP Duration is 2 minutes**	
        * **If user doesn't get otp you can retry prelogin**

      operationId: preloginUser
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode804'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'

      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/PreloginPayload'

  /uaa/login:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string   
    post:
      tags:
        - Login / Get JWT
      summary: Login
      description: Call this when you want to get user JWT
      operationId: loginUser
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100Activation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode804'
                  - $ref: '#/components/schemas/ErrorCode807'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'

      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/LoginPayload'

  /uaa/face-login:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string   
    post:
      tags:
        - Login / Get JWT
      summary: Login (with face)
      description: Call this when you want to get user JWT with face / selfie authentication but **you need upgrade user first**
      operationId: loginUserWithFace
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100Activation'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode804'
                  - $ref: '#/components/schemas/ErrorCode896'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'

      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/LoginFacePayload'

  /user/save-pin:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: Authorization
        in: header
        description: "User JWT with Bearer prefix. [Click here for detail](#section/Authentication/What-is-JWT)"
        example: Bearer s7t3sad...
        required: true
        schema:
          type: string 
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string   
    post:
      tags:
        - PIN (User)
      summary: Save
      description: User save PIN
      operationId: saveUserPIN
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode893'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/SavePINPayload'

  /user/change-pin:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: Authorization
        in: header
        description: "User JWT with Bearer prefix. [Click here for detail](#section/Authentication/What-is-JWT)"
        example: Bearer s7t3sad...
        required: true
        schema:
          type: string 
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - PIN (User)
      summary: Change
      description: User change PIN
      operationId: changeUserPIN
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode815'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/ChangePINPayload'

  /user/pre-forgot-pin/{otp_channel}:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: Authorization
        in: header
        description: "User JWT with Bearer prefix. [Click here for detail](#section/Authentication/What-is-JWT)"
        example: Bearer s7t3sad...
        required: true
        schema:
          type: string 
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
      - name: otp_channel
        in: path
        description: |
          Used channel for sending OTP to phone number. `wa` for Whatsapp `sms` for Short Message Service
        required: true
        schema:
          type: string
          enum:
            - wa
            - sms
    post:
      tags:
        - PIN (User)
      summary: Pre forgot
      description: |
        If the user forget the pin you can call this function. This function will send the OTP to the user phone then the OTP is used to perform the [forgot pin](example.com)
        
        Note :
        * **OTP Duration is 2 minutes**	
      operationId: preforgotUserPIN
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/PreForgotPINPayload'

  /user/forgot-pin:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: Authorization
        in: header
        description: "User JWT with Bearer prefix. [Click here for detail](#section/Authentication/What-is-JWT)"
        example: Bearer s7t3sad...
        required: true
        schema:
          type: string 
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - PIN (User)
      summary: Forgot
      description: Use OTP that user get from their phone
      operationId: forgotUserPIN
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode813'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/ForgotPINPayload'

  /user/change-face-as-pin:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: Authorization
        in: header
        description: "User JWT with Bearer prefix. [Click here for detail](#section/Authentication/What-is-JWT)"
        example: Bearer s7t3sad...
        required: true
        schema:
          type: string 
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - PIN (User)
      summary: Set face as PIN
      description: User can use their face as PIN, if you set this configuration become `true` you (as a user) can call [temporary PIN](example.com) and use the return as PIN 
      operationId: faceAsUserPIN
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/FaceAsPINPayload'

  /transaction/request-temporary-pin:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: Authorization
        in: header
        description: "User JWT with Bearer prefix. [Click here for detail](#section/Authentication/What-is-JWT)"
        example: Bearer s7t3sad...
        required: true
        schema:
          type: string 
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - PIN (User)
      summary: Request temporary PIN
      description: If the user already [verified](#tag/Registration-and-Verification/operation/upgradeUser) and `face_as_pin` equal `true` user can use their face as PIN by calling this function to get a temporary PIN and use it for transactions.
      operationId: requestTemporaryUserPIN
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100TemporaryPIN'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode896'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/TemporaryPINPayload'

  /user/check:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: Authorization
        in: header
        description: "User JWT with Bearer prefix. [Click here for detail](#section/Authentication/What-is-JWT)"
        example: Bearer s7t3sad...
        required: true
        schema:
          type: string 
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    get:
      tags:
        - Others (User)
      summary: User check / detail
      description: Get the detail information from user
      operationId: userCheck
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'

  /user/phone-book-check:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: Authorization
        in: header
        description: "User JWT with Bearer prefix. [Click here for detail](#section/Authentication/What-is-JWT)"
        example: Bearer s7t3sad...
        required: true
        schema:
          type: string 
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Others (User)
      summary: Find another user from phonebook
      description: Find another user from user phonebook
      operationId: userPhonebookCheck
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100PhoneboookCheck'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/PhonebookCheckPayload'

  /user/bank-account:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: Authorization
        in: header
        description: "User JWT with Bearer prefix. [Click here for detail](#section/Authentication/What-is-JWT)"
        example: Bearer s7t3sad...
        required: true
        schema:
          type: string 
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    get:
      tags:
        - Others (User)
      summary: List bank account
      description: User list saved bank account
      operationId: userListBankAccount
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100ListBankAccount'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
    post:
      tags:
        - Others (User)
      summary: Save bank account
      description: User save bank account
      operationId: userSaveBankAccount
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/BankAccountkPayload'
    delete:
      tags:
        - Others (User)
      summary: Delete bank account
      description: User delete bank account
      operationId: userDeleteBankAccount
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      # requestBody:
      #   $ref: '#/components/requestBodies/BankAccountkPayload'

  /corporate/save-pin:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string   
    post:
      tags:
        - PIN
      summary: Save
      description: Corporate save PIN
      operationId: saveCorporatePIN
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode893'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/SavePINPayload'

  /corporate/change-pin:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - PIN
      summary: Change
      description: Corporate change PIN
      operationId: changeCorporatePIN
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode815'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/ChangePINPayload'

  /corporate/pre-forgot-pin/{otp_channel}:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
      - name: otp_channel
        in: path
        description: |
          Used channel for sending OTP to phone number. `wa` for Whatsapp `sms` for Short Message Service
        required: true
        schema:
          type: string
          enum:
            - wa
            - sms
    post:
      tags:
        - PIN
      summary: Pre forgot
      description: |
        If the corporate forget the pin you can call this function. This function will send the OTP to the registered corporate phone then the OTP is used to perform the [forgot pin](example.com)
        
        Note :
        * **OTP Duration is 2 minutes**	
      operationId: preforgotCorporatePIN
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/PreForgotPINPayload'

  /corporate/forgot-pin:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - PIN
      summary: Forgot
      description: OTP that you get from call pre forgot pin API
      operationId: forgotCorporatePIN
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode813'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/ForgotPINPayload'

  /corporate/check:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    get:
      tags:
        - Others
      summary: Corporate check / detail
      description: Get the detail information from corporate
      operationId: corporateCheck
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Corporate'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'

  /corporate/aggregate-balance:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    get:
      tags:
        - Others
      summary: Aggregate balance
      description: Aggregate corporate balance and aggregate user balance
      operationId: corporateAggregateBalanceCheck
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100AggregateBalance'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'

  /corporate/user-balance:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Others
      summary: Fetch user balance
      description: Call this API when you want get balances of users
      operationId: fetchUserBalance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100FetchUser'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode813'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/FetchUserBalancePayload'

  /corporate/balance:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Create Balance / Virtual Account
      summary: Corporate balance
      description: Call this API when you want create corporate balance
      operationId: createCorporateBalance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100CreateBalance'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode882'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/CreateBalancePayload'

  /user/balance:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: Authorization
        in: header
        description: "User JWT with Bearer prefix. [Click here for detail](#section/Authentication/What-is-JWT)"
        example: Bearer s7t3sad...
        required: true
        schema:
          type: string 
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Create Balance / Virtual Account
      summary: User balance
      description: Call this API when you want create user balance
      operationId: createUserBalance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100CreateBalance'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode882'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/CreateBalancePayload'

  /corporate/balance/share:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Sharing
      summary: Share
      description: Call this API when you want share user balance to another user or sharing user balance to corporate
      operationId: shareBalance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/ShareBalancePayload'

  /corporate/balance/revoke:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Sharing
      summary: Revoke
      description: Call this API when you want revoke user access to another balance user
      operationId: revokeBalance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/RevokeBalancePayload'

  /corporate/account-holdername:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Transfer to Bank
      summary: Inquiry bank account
      description: |
        Call this when you want validate or inquiry a bank account
      operationId: inquiryBankAccount
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100InquiryBankAccount'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/InquiryBankPayload'

  /corporate/transfer/bank:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
      - name: x-transaction-code
        in: header
        description: Encrypt account / corporate PIN with RSA algorithm encryption. [Click here for detail](#section/Authentication/What-is-x-transaction-code)
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Transfer to Bank
      summary: Bank transfer
      description: |
        Call this API when you want transfer to bank as a corporate
        
        Note :
          - Minimum amount less than 10.000
          - Maximum amount more than 2.000.000.000 
          - Fraud transactions occur for several reasons. One of which is because there are identical transactions (amount, from, to) in less than a minute 
          - Fraud transactions occur for several reasons. One of which is because there are identical transactions (amount, from, to) in less than a minute 

      operationId: corporateTransferBank
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100TransactionBankCorporate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode808'
                  - $ref: '#/components/schemas/ErrorCode816'
                  - $ref: '#/components/schemas/ErrorCode810'
                  - $ref: '#/components/schemas/ErrorCode824'
                  - $ref: '#/components/schemas/ErrorCode818'
        '403':
          description: Forbiden Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode702'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/TransferPayload'

  /transaction/transfer/wallet:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: Authorization
        in: header
        description: "User JWT with Bearer prefix. [Click here for detail](#section/Authentication/What-is-JWT)"
        example: Bearer s7t3sad...
        required: true
        schema:
          type: string 
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
      - name: x-transaction-code
        in: header
        description: Encrypt sub account / user PIN with RSA algorithm encryption. [Click here for detail](#section/Authentication/What-is-x-transaction-code)
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Transfer to Bank
      summary: Bank transfer (Sub Account / User)
      description: |
        Call this API when you want transfer to bank as a sub account / user
        
        Note :
          - Upgrade / verify first 
          - Minimum amount less than 10.000
          - Maximum amount more than 2.000.000.000 
          - Fraud transactions occur for several reasons. One of which is because there are identical transactions (amount, from, to) in less than a minute 
          - Fraud transactions occur for several reasons. One of which is because there are identical transactions (amount, from, to) in less than a minute 

      operationId: userTransferBank
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100TransactionBankUser'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode808'
                  - $ref: '#/components/schemas/ErrorCode816'
                  - $ref: '#/components/schemas/ErrorCode810'
                  - $ref: '#/components/schemas/ErrorCode824'
                  - $ref: '#/components/schemas/ErrorCode818'
        '403':
          description: Forbiden Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode702'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/TransferPayload'

  /corporate/accept-payment/card:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string   
    post:
      tags:
        - Accept Payment with Card
      summary: Create Payment
      description: |
        Create payment, move money to assigned balance <br/>
        
        Note :
        * **If status equal `Pending` card owner must be authenticate. Take the user to `auth_url` so they can make authentication (fill OTP from their phone)**	
        * **If status equal `Completed` card owner not need authenticate**	
        * **We will inform you about this transaction via accept payment callback (if the funds was come to us)**
        * **If interval = empty string or null we assume you request non subscribe charge card**

      operationId: acceptPayment
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100CreatePayment'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'

      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/CreatePaymentPayload'

  /corporate/accept-payment/card/cancel:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string   
    post:
      tags:
        - Accept Payment with Card
      summary: Cancel Subscribe Payment
      description: |
        Cancel card subscribe payment

      operationId: cencelAcceptPayment
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'

      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/CancelPaymentPayload'


  /corporate/account-holdername/bulk:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Transfer to Bank
      summary: Bulk inquiry bank account
      description: |
        Call this when you want validate or inquiry a bank account with bulk. We will notify you when bulk completed then you can see the result by call API view bulk detail
      operationId: bulkInquiryBankAccount
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100ABulkInquiry'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode808'
                  - $ref: '#/components/schemas/ErrorCode810'
                  - $ref: '#/components/schemas/ErrorCode824'
                  - $ref: '#/components/schemas/ErrorCode818'
        '403':
          description: Forbiden Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode702'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/BulkInquiryBankPayload'

  /corporate/account-holdername/bulk/{bulk_id}:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
      - name: bulk_id
        schema:
          type: string 
        in: path
        description: |
          ID of bulk
        required: true
    get:
      tags:
        - Transfer to Bank
      summary: View bulk inquiry bank account
      description: |
        After you received callback of bulk inquiry completed, you can see result of bulk with this API
      operationId: viewBulkInquiryBankAccount
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100ABulkInquiry'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'



  /corporate/transfer/balance:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
      - name: x-transaction-code
        in: header
        description: Encrypt account / corporate PIN with RSA algorithm encryption. [Click here for detail](#section/Authentication/What-is-x-transaction-code)
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Transfer to Balance
      summary: Transfer as corporate
      description: |
        Call this API when you want transfer to another balance user as a corporate
        
        Note :
          - You can use user balance as source or target
          - Minimum amount less than 10.000
          - Maximum amount more than 2.000.000.000 

      operationId: corporateTransferBalance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100TransactionInboundCorporate'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode808'
                  - $ref: '#/components/schemas/ErrorCode810'
                  - $ref: '#/components/schemas/ErrorCode824'
                  - $ref: '#/components/schemas/ErrorCode818'
        '403':
          description: Forbiden Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode702'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/TransferBalancePayload'

  /transaction/transfer/balance:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: Authorization
        in: header
        description: "User JWT with Bearer prefix. [Click here for detail](#section/Authentication/What-is-JWT)"
        example: Bearer s7t3sad...
        required: true
        schema:
          type: string 
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
      - name: x-transaction-code
        in: header
        description: Encrypt sub account / user PIN with RSA algorithm encryption. [Click here for detail](#section/Authentication/What-is-x-transaction-code)
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Transfer to Balance
      summary: Transfer as user
      description: |
        Call this API when you want transfer to another balance of (corporate / user) as a user
        
        Note :
          - Minimum amount less than 10.000
          - Maximum amount more than 2.000.000.000 

      operationId: userTransferBalance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100TransactionInboundUser'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode808'
                  - $ref: '#/components/schemas/ErrorCode810'
                  - $ref: '#/components/schemas/ErrorCode824'
                  - $ref: '#/components/schemas/ErrorCode818'
        '403':
          description: Forbiden Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode702'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/TransferBalancePayload'

  /corporate/topup-user:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
      - name: x-transaction-code
        in: header
        description: Encrypt account / corporate PIN with RSA algorithm encryption. [Click here for detail](#section/Authentication/What-is-x-transaction-code)
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Transfer to Balance
      summary: Topup user
      description: |
        This API only can called by corporate. Used this if you want transfer to user (actually this is the same like [transfer as corporate](#tag/Inbound-Transfer/operation/corporateTransferBank) only has a different type). 
        Our intention provide you this function is to make you easier and better recognize the detail of transaction by separate the transaction type

      operationId: corporateTopupUser
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100TransactionTopup'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode808'
                  - $ref: '#/components/schemas/ErrorCode810'
                  - $ref: '#/components/schemas/ErrorCode824'
                  - $ref: '#/components/schemas/ErrorCode818'
        '403':
          description: Forbiden Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode702'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/TransferBalancePayload'

  /corporate/deduct-user:
    parameters:
      - name: Accept-Language
        in: header
        description: "The language you prefer for messages. Supported values are [here](#section/Language-Options)"
        example: id
        required: false
        schema:
          type: string
          default: en
      - name: corporate
        in: header
        description: "Your corporate id or key"
        example: 5ed5241591f9651c9435d7e6
        required: true
        schema:
          type: string
      - name: requestID
        in: header
        description: "Your unique id for each request to help us tracing the request"
        example: bf27ecab-83fa-4267-b898-9f760a05baf7
        required: true
        schema:
          type: string
      - name: signature
        in: header
        description: "HMACSHA512. Click [here](#section/Authentication/Signature) for detail "
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
      - name: x-transaction-code
        in: header
        description: Encrypt account / corporate PIN with RSA algorithm encryption. [Click here for detail](#section/Authentication/What-is-x-transaction-code)
        example: s7t3sadfa83fa4267b8989f760a05baf7jd456jk...
        required: true
        schema:
          type: string 
    post:
      tags:
        - Transfer to Balance
      summary: Deduct user
      description: |
        This API only can called by corporate. Use this if you want to deduct user balance

      operationId: corporateDeductUser
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse100TransactionDeduct'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorCode808'
                  - $ref: '#/components/schemas/ErrorCode810'
                  - $ref: '#/components/schemas/ErrorCode824'
                  - $ref: '#/components/schemas/ErrorCode818'
        '403':
          description: Forbiden Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode702'
        '500':
          description: Internal Server Error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCode9XX'
      x-codeSamples:
        - lang: 'cURL'
          source: |
            PetStore.v1.Pet pet = new PetStore.v1.Pet();
            pet.setApiKey("your api key");
            pet.petType = PetStore.v1.Pet.TYPE_DOG;
            pet.name = "Rex";
            // set other fields
            PetStoreResponse response = pet.create();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Successfully created
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: Python
          source: |
            printf('Hello Takeme')
      requestBody:
        $ref: '#/components/requestBodies/TransferBalancePayload'


components:
  schemas:
    CreatePaymentPayload:
      type: object
      properties:
        interval:
          type: string
          description: Fill this value if you want create subscription. This value specifies billing frequency
          enum:
            - year
            - month
            - week
        external_id:
          description: Attach your reference in here. We will return this value on callback
          type: string
          minLength: 1
          example: '64a234sfgasd5798sdw3wx'
        amount:
          description: Amount of transaction. A positive integer representing how much to charge in the smallest currency unit (e.g., 100 cents to charge $1.00 / 1 to Rp 1.00)
          type: integer
          minLength: 1
          example: 10000
        currency:
          type: string
          description: Three-letter ISO currency code, in lowercase. Must be a supported currency.
          enum:
            - idr
            - usd
        balance:
          description: Balance id you want to move money
          type: string
          minLength: 1
          example: '64a234sfgasd5798sdw3wx'
        card:
          description: Card data
          allOf:
            - $ref: '#/components/schemas/CardPayload'
        return_url:
          description: After card owner success authenticate, they will redirect to this URL
          type: string
          minLength: 1
          example: 'https://example.com/success/yeay'
    CancelPaymentPayload:
      type: object
      properties:
        subscribe_code:
          description: Attach your subscribe code that you want cancel here
          type: string
          minLength: 1
          example: 'sub_64a234sfgasd5798sdw3wx'
    CreatePaymentResponse:
      type: object
      properties:
        status:
          type: string
          description: Status of your request
          enum:
            - Pending
            - Completed
        amount:
          description: Amount of transaction. A positive integer representing how much to charge in the smallest currency unit (e.g., 100 cents to charge $1.00 / 1 to Rp 1.00)
          type: integer
          minLength: 1
          example: 10000
        currency:
          type: string
          description: Three-letter ISO currency code, in lowercase. Must be a supported currency.
          enum:
            - idr
            - usd
        balance:
          description: Balance id you want to move money
          type: string
          minLength: 1
          example: '64a234sfgasd5798sdw3wx'
        auth_url:
          description: Take the card owner to the url
          type: string
          minLength: 1
          example: 'https://api.takeme.id/auth/card/3ds'
        subscription:
          description: Subscription id. **(You should store this value (used for cancel subscribe)
          type: string
          minLength: 1
          example: '64a234sfgasd5798sdw3wx'
    CardPayload:
      type: object
      properties:
        number:
          description: Card number
          type: string
          minLength: 1
          example: '4000002500003155'
        exp_month:
          description: Card expired month
          type: string
          minLength: 1
          example: '8'
        exp_year:
          description: Card expired month
          type: string
          minLength: 1
          example: '2023'
        cvc:
          description: Card CVC
          type: string
          minLength: 1
          example: '2023'
    SignupPayload:
      type: object
      properties:
        full_name:
          description: User full name
          type: string
          minLength: 1
          example: Cahyo Saputro
        email:
          description: User email address
          type: string
          format: email
          minLength: 1
          example: cahyo@example.com
        phone_number:
          description: User phone number
          type: string
          format: 'User phone number in international format'
          minLength: 1
          example: '+6281291519XXX'
      required:
      - full_name
      - email
      - phone_number
    ActivationPayload:
      type: object
      properties:
        activation_code:
          description: OTP / Code that user got from their phone number
          type: string
          minLength: 1
          example: '883211'
        email:
          description: User email address
          type: string
          format: email
          minLength: 1
          example: cahyo@example.com
        phone_number:
          description: User phone number
          type: string
          format: 'User phone number in international format'
          minLength: 1
          example: '+6281291519XXX'
      required:
      - activation_code
      - email
      - phone_number
    UpgradeUserPayload:
      type: object
      properties:
        nik:
          description: National identification number of user 
          type: string
          minLength: 1
          example: '6766437734646646561'
        image:
          description: Convert user selfie to base64
          type: string
          minLength: 1
          example: '/4567gruybfidhjsuyfdbo/'
        device_id:
          description: Device id of user
          type: string
          minLength: 1
          example: '398fhiufdnjk-83bfhdjsh348-dsuyif'
      required:
      - nik
      - image
    SuccessResponse100:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100Activation:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: User JWT
          allOf:
            - $ref: '#/components/schemas/Jwt'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100TemporaryPIN:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: User JWT
          allOf:
            - $ref: '#/components/schemas/TemporaryPIN'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100PhoneboookCheck:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: Balance VA
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100ListBankAccount:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: Balance VA
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100AggregateBalance:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: Return
          allOf:
            - $ref: '#/components/schemas/AggregateBalanceResponse'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100CreateBalance:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: User JWT
          allOf:
            - $ref: '#/components/schemas/Balance'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100ABulkInquiry:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: User JWT
          allOf:
            - $ref: '#/components/schemas/BulkInquiry'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    FetchUserBalancePayload:
      type: object
      properties:
        users:
          description: List user id
          type: array
          items:
            type: string
            example: "34857yhrufuyfbsdffi"
      required:
      - users
    SuccessResponse100FetchUser:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: Return
          allOf:
            - $ref: '#/components/schemas/FetchUserResponse'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100TransactionBankCorporate:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: User JWT
          allOf:
            - $ref: '#/components/schemas/TransactionBankFromCorporate'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100CreatePayment:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: User JWT
          allOf:
            - $ref: '#/components/schemas/CreatePaymentResponse'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100TransactionBankUser:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: User JWT
          allOf:
            - $ref: '#/components/schemas/TransactionBankFromUser'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100TransactionInboundCorporate:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: User JWT
          allOf:
            - $ref: '#/components/schemas/TransactionBalanceFromCorporate'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100TransactionInboundUser:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: User JWT
          allOf:
            - $ref: '#/components/schemas/TransactionBalanceFromUser'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100TransactionTopup:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: User JWT
          allOf:
            - $ref: '#/components/schemas/TransactionTopupUser'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100TransactionDeduct:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: User JWT
          allOf:
            - $ref: '#/components/schemas/TransactionDeductUser'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    SuccessResponse100InquiryBankAccount:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 100
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Success
        data:
          description: User JWT
          allOf:
            - $ref: '#/components/schemas/BankAccount2'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'


    PreloginPayload:
      type: object
      properties:
        phone_number:
          description: User phone number
          type: string
          format: 'User phone number in international format'
          minLength: 1
          example: '+6281291519XXX'
      required:
      - phone_number
    LoginPayload:
      type: object
      properties:
        login_code:
          description: OTP / Code that user got from their phone number
          type: string
          minLength: 1
          example: '883211'
        phone_number:
          description: User phone number
          type: string
          format: 'User phone number in international format'
          minLength: 1
          example: '+6281291519XXX'
      required:
      - login_code
      - phone_number
    LoginFacePayload:
      type: object
      properties:
        face_image:
          description: Convert selfie image to base64
          type: string
          minLength: 1
          example: '/9j/4AAQSkZJRgABAQAAAQABAAD/2wC'
        phone_number:
          description: User phone number
          type: string
          format: 'User phone number in international format'
          minLength: 1
          example: '+6281291519XXX'
      required:
      - face_image
      - phone_number       
    SavePINPayload:
      type: object
      properties:
        pin:
          description: You can't send PIN as plain text. You must encrypt PIN with RSA algorithm encryption (same with `x-transaction-code`). [Click here for detail](#section/Authentication/What-is-x-transaction-code) 
          type: string
          minLength: 1
          example: '8LQRtfAeX7uC2jbScggQr1IQ2XqXlgRYjL+StnNxg25WUOAzgdSjp5T67fXpvN6hj+Ex9llFyt1X35LWuGP7ru1lnzPL8Q=='
      required:
      - pin
    ChangePINPayload:
      type: object
      properties:
        old_pin:
          description: Old PIN. You can't send PIN as plain text. You must encrypt PIN with RSA algorithm encryption (same with `x-transaction-code`). [Click here for detail](#section/Authentication/What-is-x-transaction-code) 
          type: string
          minLength: 1
          example: '8LQRtfAeX7uC2jbScggQr1IQ2XqXlgRYjL+StnNxg25WUOAzgdSjp5T67fXpvN6hj+Ex9llFyt1X35LWuGP7ru1lnzPL8Q=='
        new_pin:
          description: New PIN. You can't send PIN as plain text. You must encrypt PIN with RSA algorithm encryption (same with `x-transaction-code`). [Click here for detail](#section/Authentication/What-is-x-transaction-code) 
          type: string
          minLength: 1
          example: '8LQRtfAeX7uC2jbScggQr1IQ2XqXlgRYjL+StnNxg25WUOAzgdSjp5T67fXpvN6hj+Ex9llFyt1X35LWuGP7ru1lnzPL8Q=='
      required:
      - old_pin
      - new_pin
    PreForgotPINPayload:
      type: object
      properties:
        pin:
          description: New PIN. You can't send PIN as plain text. You must encrypt PIN with RSA algorithm encryption (same with `x-transaction-code`). [Click here for detail](#section/Authentication/What-is-x-transaction-code) 
          type: string
          minLength: 1
          example: '8LQRtfAeX7uC2jbScggQr1IQ2XqXlgRYjL+StnNxg25WUOAzgdSjp5T67fXpvN6hj+Ex9llFyt1X35LWuGP7ru1lnzPL8Q=='
      required:
      - pin
    ForgotPINPayload:
      type: object
      properties:
        confirm_pin_code:
          description: OTP from [pre forgot PIN](#tag/PIN-(User)/operation/preforgotUserPIN)
          type: string
          minLength: 1
          example: '377432'
      required:
      - confirm_pin_code
    FaceAsPINPayload:
      type: object
      properties:
        face_as_pin:
          description: Set `true` if you want change face as user PIN
          type: boolean
          minLength: 1
          example: true
      required:
      - face_as_pin
    TemporaryPINPayload:
      type: object
      properties:
        face_image:
          description: Convert user selfie to base64
          type: string
          minLength: 1
          example: '/87543ghybuiwhfgfhbdihdfbs..'
      required:
      - face_image
    PhonebookCheckPayload:
      type: object
      properties:
        phone_book:
          description: Balance VA
          type: array
          items:
            $ref: '#/components/schemas/Contact'
      required:
      - phone_book
    FetchUserResponse:
      type: object
      properties:
        users:
          description: List user
          type: array
          items:
            $ref: '#/components/schemas/UserMap'
      required:
      - users
    AggregateBalanceResponse:
      type: object
      properties:
        corporate_balance:
          description: "Aggregate of corporate balance"
          type: integer
          minLength: 1
          example: 9990000
        aggregate_user_balance:
          description: "Aggregate of user balance"
          type: integer
          minLength: 1
          example: 11810000
    ShareBalancePayload:
      type: object
      properties:
        balance:
          description: Balance id you want to share
          type: string
          minLength: 1
          example: '64a234sfgasd5798sdw3wx'
        access:
          type: string
          description: Level access
          example: Shared
          enum:
            - Shared
            - View Only
        share_to:
          description: User id you want share or your corporate id
          type: string
          minLength: 1
          example: '34a234sfgasd5798sdw3wx'
      required:
      - balance
      - share_to
      - access
    RevokeBalancePayload:
      type: object
      properties:
        balance:
          description: Balance id you want revoke access
          type: string
          minLength: 1
          example: '64a234sfgasd5798sdw3wx'
        revoke_from:
          description: User id (or your corporate id) that you want to revoke access
          type: string
          minLength: 1
          example: '34a234sfgasd5798sdw3wx'
      required:
      - balance
      - revoke_from
    ErrorCode702:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 702
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Invalid PIN / Forbidden operation 
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    ErrorCode803:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 803
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Email or phone number already registered
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    ErrorCode882:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 882
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Invalid name format
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    ErrorCode9XX:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 935
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Internal Server Error
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    ErrorCode804:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 804
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: User not found
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    ErrorCode805:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 805
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Invalid activation code
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'   
    ErrorCode807:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 807
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Invalid login code
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'   
    ErrorCode813:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 813
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Invalid code
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'  
    ErrorCode883:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 883
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: User already active
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'   
    ErrorCode893:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 893
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Invalid PIN format
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'   
    ErrorCode815:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 815
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Invalid PIN
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'      
    ErrorCode896:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 896
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Face not recognize
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'   
    ErrorCode808:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 808
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Insufficient balance
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'   
    ErrorCode816:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 816
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Upgrade account first / User unverify
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'    
    ErrorCode810:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 810
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Minimum amount
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'   
    ErrorCode824:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 824
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Maximum amount
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'   
    ErrorCode818:
      type: object
      properties:
        code:
          description: Response code status
          type: integer
          minLength: 1
          example: 818
        description:
          description: Our message or description of response
          type: string
          minLength: 1
          example: Fraud transaction
        data:
          description: Our return data for your request will be here
          type: object
          minLength: 1
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'   
  

    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Cat:
      description: A representation of a cat
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            huntingSkill:
              type: string
              description: The measured skill for hunting
              default: lazy
              example: adventurous
              enum:
                - clueless
                - lazy
                - adventurous
                - aggressive
          required:
            - huntingSkill
    Category:
      type: object
      properties:
        id:
          description: Category ID
          allOf:
            - $ref: '#/components/schemas/Id'
        name:
          description: Category name
          type: string
          minLength: 1
        sub:
          description: Test Sub Category
          type: object
          properties:
            prop1:
              type: string
              description: Dumb Property
      xml:
        name: Category
    Dog:
      description: A representation of a dog
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            packSize:
              type: integer
              format: int32
              description: The size of the pack the dog is from
              default: 1
              minimum: 1
          required:
            - packSize
    HoneyBee:
      description: A representation of a honey bee
      allOf:
        - $ref: '#/components/schemas/Pet'
        - type: object
          properties:
            honeyPerDay:
              type: number
              description: Average amount of honey produced per day in ounces
              example: 3.14
              multipleOf: .01
          required:
            - honeyPerDay
    Id:
      type: integer
      format: int64
      readOnly: true
    Order:
      type: object
      properties:
        id:
          description: Order ID
          allOf:
            - $ref: '#/components/schemas/Id'
        petId:
          description: Pet ID
          allOf:
            - $ref: '#/components/schemas/Id'
        quantity:
          type: integer
          format: int32
          minimum: 1
          default: 1
        shipDate:
          description: Estimated ship date
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          enum:
            - placed
            - approved
            - delivered
        complete:
          description: Indicates whenever order was completed or not
          type: boolean
          default: false
          readOnly: true
        requestId:
          description: Unique Request Id
          type: string
          writeOnly: true
      xml:
        name: Order
    Pet:
      type: object
      required:
        - name
        - photoUrls
      discriminator:
        propertyName: petType
        mapping:
          cat: '#/components/schemas/Cat'
          dog: '#/components/schemas/Dog'
          bee: '#/components/schemas/HoneyBee'
      properties:
        id:
          externalDocs:
            description: "Find more info here"
            url: "https://example.com"
          description: Pet ID
          allOf:
            - $ref: '#/components/schemas/Id'
        category:
          description: Categories this pet belongs to
          allOf:
            - $ref: '#/components/schemas/Category'
        name:
          description: The name given to a pet
          type: string
          example: Guru
        photoUrls:
          description: The list of URL to a cute photos featuring pet
          type: array
          maxItems: 20
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
            format: url
        friend:
          allOf:
            - $ref: '#/components/schemas/Pet'
        tags:
          description: Tags attached to the pet
          type: array
          minItems: 1
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: Pet status in the store
          enum:
            - available
            - pending
            - sold
        petType:
          description: Type of a pet
          type: string
      xml:
        name: Pet
    Tag:
      type: object
      properties:
        id:
          description: Tag ID
          allOf:
            - $ref: '#/components/schemas/Id'
        name:
          description: Tag name
          type: string
          minLength: 1
      xml:
        name: Tag
    Jwt:
      type: object
      properties:
        jwt:
          description: JWT user
          type: string
          minLength: 4
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmdWxsX25hbWUiOiJDaXB1dHJhIERoaW1hcyIsImV4cCI6MTU4ODg4Nzk0MX0.XsTP8iJgekda8wRgWwdqr1Qodml7iVuFz0EyHdzxPE
    TemporaryPIN:
      type: object
      properties:
        temporary_pin:
          description: Temporary PIN
          type: string
          minLength: 4
          example: '999111'
    User:
      type: object
      properties:
        id:
          description: User ID
          type: string
          minLength: 1
          example: '619ddb3c9a66113720af5d22'
        corporate_id:
          description: Corporate ID
          type: string
          minLength: 1
          example: '5ed5241591f9651c9435d7e6'
        email:
          description: Email of user
          type: string
          minLength: 1
          example: 'hello@example.com'
        phone_number:
          description: User phone number
          type: string
          format: 'User phone number in international format'
          minLength: 1
          example: '+6281291519XXX'
        full_name:
          description: User full name
          type: string
          minLength: 1
          example: Cahyo Saputro
        active:
          description: Is user active. If this `active` = `false` user is locked
          type: boolean
          minLength: 1
          example: true
        verified:
          description: Is user verified. if this value equal `true` user already upgrade
          type: boolean
          minLength: 1
          example: true
        main_balance:
          description: Balance used as the default
          allOf:
            - $ref: '#/components/schemas/Balance'
        list_balance:
          description: List available balance
          type: array
          items:
            $ref: '#/components/schemas/AccessBalance'
        saved_bank_account:
          description: List saved bank account of user 
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
        face_as_pin:
          description: Is face as PIN `true` you shoud ask user for take a selfie to peform [request temporay PIN](#tag/PIN-(User)/operation/requestTemporaryUserPIN)
          type: boolean
          minLength: 1
          example: true
    Balance:
      type: object
      properties:
        id:
          description: User ID
          type: string
          minLength: 1
          example: '619ddb3c9a66113720af5d22'
        corporate_id:
          description: Corporate ID
          type: string
          minLength: 1
          example: '5ed5241591f9651c9435d7e6'
        owner:
          description: Owner of balance
          allOf:
            - $ref: '#/components/schemas/Owner'
        name:
          description: Name of balance
          type: string
          minLength: 1
          example: 'Saving'
        amount:
          description: Amount of balance
          type: integer
          minLength: 1
          example: 100000
        va:
          description: Balance VA
          type: array
          items:
            $ref: '#/components/schemas/VA'
    Owner:
      type: object
      properties:
        id:
          description: User ID
          type: string
          minLength: 1
          example: '619ddb3c9a66113720af5d22'
        type:
          description: Type of owner 
          type: string
          enum:
            - user
            - corporate
          minLength: 1
          example: 'user'
        name:
          description: Name of owner
          type: string
          minLength: 1
          example: Cahyo Saputro
    VA:
      type: object
      properties:
        bank_code:
          description: Bank code of VA [click here for detail](example.com)
          type: string
          enum:
            - MANDIRI
            - BCA
          minLength: 1
          example: 'MANDIRI'
        account_number:
          description: Account nubmer of VA
          type: string
          minLength: 1
          example: '886087025608772671'
    AccessBalance:
      type: object
      properties:
        balance_id:
          description: Balance ID
          type: string
          minLength: 1
          example: '619ddb3c9a66113720af5d22'
        access:
          description: Access level [click here for detail](example.com)
          type: string
          enum:
            - Owner
            - Shared
            - View Only
          minLength: 1
          example: 'Shared'
        detail:
          description: Owner of balance
          allOf:
            - $ref: '#/components/schemas/Balance'
    AccessBalanceMap:
      type: object
      properties:
        balance_id:
          description: Balance ID
          type: string
          minLength: 1
          example: '619ddb3c9a66113720af5d22'
        access:
          description: Access level [click here for detail](example.com)
          type: string
          enum:
            - Owner
            - Shared
            - View Only
          minLength: 1
          example: 'Shared'
        amount:
          description: Amount of balance
          type: integer
          minLength: 1
          example: 810000
    UserMap:
      type: object
      properties:
        id:
          description: User ID
          type: string
          minLength: 1
          example: '619ddb3c9a66113720af5d22'
        balances:
          description: List available balance
          type: array
          items:
            $ref: '#/components/schemas/AccessBalanceMap'
    BankAccount:
      type: object
      properties:
        name:
          description: Name of account
          type: string
          minLength: 1
          example: Mama
        account_number:
          description: Account Number
          type: string
          minLength: 1
          example: "2291205561"
        bank_code:
          description: Bank code of VA [click here for detail](example.com)
          type: string
          enum:
            - MANDIRI
            - BCA
          minLength: 1
          example: 'MANDIRI'
      required:
      - name
      - account_number
      - bank_code
    BankAccount2:
      type: object
      properties:
        account_name:
          description: Name of account
          type: string
          minLength: 1
          example: MONICA WARASWATI
        account_number:
          description: Account Number
          type: string
          minLength: 1
          example: "2291205561"
        bank_code:
          description: Bank code of VA [click here for detail](example.com)
          type: string
          enum:
            - MANDIRI
            - BCA
          minLength: 1
          example: 'MANDIRI'
      required:
      - account_name
      - account_number
      - bank_code
    
  
    Contact:
      type: object
      properties:
        name:
          description: Name of account
          type: string
          minLength: 1
          example: Mama
        number:
          description: Phone number
          type: string
          minLength: 1
          example: "+628568221XXX"
    Corporate:
      type: object
      properties:
        id:
          description: User ID
          type: string
          minLength: 1
          example: '619ddb3c9a66113720af5d22'
        name:
          description: Name of Corporate
          type: string
          minLength: 1
          example: Platinum
        phone_number:
          description: Corporate registered phone number
          type: string
          format: 'Phone number in international format'
          minLength: 1
          example: '+6281291519XXX'
        main_balance:
          description: Balance used as the default
          allOf:
            - $ref: '#/components/schemas/Balance'
        list_balance:
          description: List available balance
          type: array
          items:
            $ref: '#/components/schemas/AccessBalance'
    CreateBalancePayload:
      type: object
      properties:
        name:
          description: Name of balance
          type: string
          minLength: 1
          example: Hello Balance
    TransferPayload:
      type: object
      properties:
        to_bank_account:
          description: Destination bank account
          allOf:
            - $ref: '#/components/schemas/BankAccount'
        type:
          description: Type of transfer
          type: string
          enum:
            - "TOPUP"
            - "DEDUCT"
            - "TRANSFER_TO_WALLET"
            - "TRANSFER_TO_CASH"
            - "TRANSFER_TO_BANK"
            - "PAY_QR"
            - "PAY_BILLER"
          minLength: 1
          example: "TRANSFER_TO_BANK"
        notes:
          description: Note of transfer
          type: string
          example: 'Reinbursement'
        balance:
          description: Source of fund
          type: string
          default: main_balance
          example: '5ed5241591f9651c9435d7e6'
        amount:
          description: Amount of transfer
          type: integer
          minLength: 1
          example: 10000
        external_id:
          description: You unique id, reference for recon
          type: string
          example: s324ghq435da99sadsda234234'
      required:
      - to_bank_account
      - type
      - amount
    TransferBalancePayload:
      type: object
      properties:
        phone_number:
          description: This field become optional if you fill `target_balance_id`
          type: string
          example: '+628129151XXXX'
        target_balance_id:
          description: Target available balance
          type: string
          default: main_balance
          example: '5ed5241591f9651c9435d7e6'
        source_balance_id:
          description: Your source of funds
          type: string
          default: main_balance
          example: '5ed5241591f9651c9435d7e6'
        amount:
          description: Amount of transfer
          type: integer
          minLength: 1
          example: 10000
        external_id:
          description: You unique id, reference for recon
          type: string
          example: s324ghq435da99sadsda234234'
      required:
      - amount
      - phone_number
      - target_balance_id
    TransferObjectCorp:
      type: object
      properties:
        type:
          description: Type of object
          type: string
          enum:
            - "BANK_ACCOUNT"
            - "WALLET_ACCOUNT"
            - "BILLER"
            - "CORPORATE_ACCOUNT"
            - "PERSON"
          minLength: 1
          example: "CORPORATE_ACCOUNT"
        institution_code:
          description: Institution code. If object is bank this will be bank code
          type: string
          minLength: 1
          example: '5ed5241591f9651c9435d7e6'
        name:
          description: Name of object
          type: string
          minLength: 1
          example: 'Platinum'
        account_number:
          description: Account number / unique id generate by their organization
          type: string
          minLength: 1
          example: '5ed5241591f9651c9435d7e6'
    TransferObjectUser:
      type: object
      properties:
        type:
          description: Type of object
          type: string
          enum:
            - "BANK_ACCOUNT"
            - "WALLET_ACCOUNT"
            - "BILLER"
            - "CORPORATE_ACCOUNT"
            - "PERSON"
          minLength: 1
          example: "WALLET_ACCOUNT"
        institution_code:
          description: Institution code. If object is bank this will be bank code
          type: string
          minLength: 1
          example: '5ed5241591f9651c9435d7e6'
        name:
          description: Name of object
          type: string
          minLength: 1
          example: 'Cahyo Saputro'
        account_number:
          description: Account number / unique id generate by their organization
          type: string
          minLength: 1
          example: '+628129151XXXX'


    BulkInquiry:
      type: object
      properties:
        id:
          description: ID of bulk
          type: string
          minLength: 1
          example: "RF238478278324"
        corporate_id:
          description: Corporate ID
          type: string
          minLength: 1
          example: '5ed5241591f9651c9435d7e6'
        reference:
          description: Your reference for this bulk
          type: string
          minLength: 1
          example: "RF238478278324"
        list:
          description: List bulk
          type: array
          items:
            $ref: '#/components/schemas/InquiryItem'
        total_list:
          description: Total list
          type: integer
          minLength: 1
          example: 1
        status:
          description: Status of bulk
          type: string
          enum:
            - Progress
            - Completed
          minLength: 1
          example: Progress
        owner:
          description: Owner of balance
          allOf:
            - $ref: '#/components/schemas/Owner'
      
    InquiryItem:
      type: object
      properties:
        number:
          description: Sequence item number
          type: integer
          minLength: 1
          example: 1
        account_name:
          description: Name of account
          type: string
          minLength: 1
          example: MONICA WARASWATI
        account_number:
          description: Account Number
          type: string
          minLength: 1
          example: "2291205561"
        bank_name:
          description: Bank code of VA [click here for detail](example.com)
          type: string
          enum:
            - MANDIRI
            - BCA
          minLength: 1
          example: 'MANDIRI'
        valid:
          description: Is valid ?
          type: boolean
          minLength: 1
          example: true
        reason:
          description: Failed reason
          type: string
          minLength: 1
          example: Wrong bank code
        
      required:
      - account_name
      - account_number
      - bank_name

    TransferObjectBank:
      type: object
      properties:
        type:
          description: Type of object
          type: string
          enum:
            - "BANK_ACCOUNT"
            - "WALLET_ACCOUNT"
            - "BILLER"
            - "CORPORATE_ACCOUNT"
            - "PERSON"
          minLength: 1
          example: "BANK_ACCOUNT"
        institution_code:
          description: Institution code. If object is bank this will be bank code
          type: string
          minLength: 1
          example: 'BCA'
        name:
          description: Name of object
          type: string
          minLength: 1
          example: 'MR X'
        account_number:
          description: Account number / unique id generate by their organization
          type: string
          minLength: 1
          example: '8734700012'
    TransactionBankFromCorporate:
        type: object
        properties:
          transaction_code:
            description: Transaction code
            type: string
            minLength: 1
            example: 'trx:20220801104104:897452:1'
          type:
            description: Type of transaction
            type: string
            minLength: 1
            example: 'TRANSFER_TO_BANK'
          from_balance_id:
            description: Balance as source of fund
            type: string
            minLength: 1
            example: '619ddb3c9a66113720af5d22'
          from:
            description: From account
            allOf:
              - $ref: '#/components/schemas/TransferObjectCorp'
          to:
            description: To account
            allOf:
              - $ref: '#/components/schemas/TransferObjectBank'
          sub_amount:
            description: Sub amount /  amount before add fee
            type: integer
            minLength: 1
            example: 2000
          amount:
            description: Amount after add fee
            type: integer
            minLength: 1
            example: 12000
          status:
            description: Status of transfer [click here for detail](#section/Status-of-Transaction)
            type: string
            enum:
              - Refund
              - Completed
              - Pending
              - Failed
            minLength: 1
            example: Pending
    TransactionBankFromUser:
        type: object
        properties:
          transaction_code:
            description: Transaction code
            type: string
            minLength: 1
            example: 'trx:20220801104104:897452:1'
          type:
            description: Type of transaction
            type: string
            minLength: 1
            example: 'TRANSFER_TO_BANK'
          from_balance_id:
            description: Balance as source of fund
            type: string
            minLength: 1
            example: '619ddb3c9a66113720af5d22'
          from:
            description: From account
            allOf:
              - $ref: '#/components/schemas/TransferObjectUser'
          to:
            description: Destination bank account
            allOf:
              - $ref: '#/components/schemas/TransferObjectBank'
          sub_amount:
            description: Sub amount /  amount before add fee
            type: integer
            minLength: 1
            example: 2000
          amount:
            description: Amount after add fee
            type: integer
            minLength: 1
            example: 12000
          status:
            description: Status of transfer [click here for detail](#section/Status-of-Transaction)
            type: string
            enum:
              - Refund
              - Completed
              - Pending
              - Failed
            minLength: 1
            example: Pending
    TransactionBalanceFromCorporate:
        type: object
        properties:
          transaction_code:
            description: Transaction code
            type: string
            minLength: 1
            example: 'trx:20220801104104:897452:1'
          type:
            description: Type of transfer
            type: string
            enum:
              - "TOPUP"
              - "DEDUCT"
              - "TRANSFER_TO_WALLET"
              - "TRANSFER_TO_CASH"
              - "TRANSFER_TO_BANK"
              - "PAY_QR"
              - "PAY_BILLER"
            minLength: 1
            example: "TRANSFER_TO_WALLET"
          from_balance_id:
            description: Balance as source of fund
            type: string
            minLength: 1
            example: '619ddb3c9a66113720af5d22'
          to_balance_id:
            description: Balance as target of fund
            type: string
            minLength: 1
            example: '419ddb3c9a66113720af5d22'
          from:
            description: Destination bank account
            allOf:
              - $ref: '#/components/schemas/TransferObjectCorp'
          to:
            description: Destination bank account
            allOf:
              - $ref: '#/components/schemas/TransferObjectUser'
          sub_amount:
            description: Sub amount /  amount before add fee
            type: integer
            minLength: 1
            example: 2000
          amount:
            description: Amount after add fee
            type: integer
            minLength: 1
            example: 12000
          status:
            description: Status of transfer [click here for detail](#section/Status-of-Transaction)
            type: string
            enum:
              - Refund
              - Completed
              - Pending
              - Failed
            minLength: 1
            example: Completed
    TransactionBalanceFromUser:
        type: object
        properties:
          transaction_code:
            description: Transaction code
            type: string
            minLength: 1
            example: 'trx:20220801104104:897452:1'
          type:
            description: Type of transfer
            type: string
            enum:
              - "TOPUP"
              - "DEDUCT"
              - "TRANSFER_TO_WALLET"
              - "TRANSFER_TO_CASH"
              - "TRANSFER_TO_BANK"
              - "PAY_QR"
              - "PAY_BILLER"
            minLength: 1
            example: "TRANSFER_TO_WALLET"
          from_balance_id:
            description: Balance as source of fund
            type: string
            minLength: 1
            example: '619ddb3c9a66113720af5d22'
          to_balance_id:
            description: Balance as target of fund
            type: string
            minLength: 1
            example: '419ddb3c9a66113720af5d22'
          from:
            description: Destination bank account
            allOf:
              - $ref: '#/components/schemas/TransferObjectUser'
          to:
            description: Destination bank account
            allOf:
              - $ref: '#/components/schemas/TransferObjectUser'
          sub_amount:
            description: Sub amount /  amount before add fee
            type: integer
            minLength: 1
            example: 2000
          amount:
            description: Amount after add fee
            type: integer
            minLength: 1
            example: 12000
          status:
            description: Status of transfer [click here for detail](#section/Status-of-Transaction)
            type: string
            enum:
              - Refund
              - Completed
              - Pending
              - Failed
            minLength: 1
            example: Completed
    TransactionTopupUser:
        type: object
        properties:
          transaction_code:
            description: Transaction code
            type: string
            minLength: 1
            example: 'trx:20220801104104:897452:1'
          type:
            description: Type of transfer
            type: string
            enum:
              - "TOPUP"
              - "DEDUCT"
              - "TRANSFER_TO_WALLET"
              - "TRANSFER_TO_CASH"
              - "TRANSFER_TO_BANK"
              - "PAY_QR"
              - "PAY_BILLER"
            minLength: 1
            example: "TOPUP"
          from_balance_id:
            description: Balance as source of fund
            type: string
            minLength: 1
            example: '619ddb3c9a66113720af5d22'
          to_balance_id:
            description: Balance as target of fund
            type: string
            minLength: 1
            example: '419ddb3c9a66113720af5d22'
          from:
            description: Destination bank account
            allOf:
              - $ref: '#/components/schemas/TransferObjectCorp'
          to:
            description: Destination bank account
            allOf:
              - $ref: '#/components/schemas/TransferObjectUser'
          sub_amount:
            description: Sub amount /  amount before add fee
            type: integer
            minLength: 1
            example: 2000
          amount:
            description: Amount after add fee
            type: integer
            minLength: 1
            example: 12000
          status:
            description: Status of transfer [click here for detail](#section/Status-of-Transaction)
            type: string
            enum:
              - Refund
              - Completed
              - Pending
              - Failed
            minLength: 1
            example: Completed
    TransactionDeductUser:
        type: object
        properties:
          transaction_code:
            description: Transaction code
            type: string
            minLength: 1
            example: 'trx:20220801104104:897452:1'
          type:
            description: Type of transfer
            type: string
            enum:
              - "TOPUP"
              - "DEDUCT"
              - "TRANSFER_TO_WALLET"
              - "TRANSFER_TO_CASH"
              - "TRANSFER_TO_BANK"
              - "PAY_QR"
              - "PAY_BILLER"
            minLength: 1
            example: "DEDUCT"
          from_balance_id:
            description: Balance as source of fund
            type: string
            minLength: 1
            example: '619ddb3c9a66113720af5d22'
          to_balance_id:
            description: Balance as target of fund
            type: string
            minLength: 1
            example: '419ddb3c9a66113720af5d22'
          from:
            description: Destination bank account
            allOf:
              - $ref: '#/components/schemas/TransferObjectUser'
          to:
            description: Destination bank account
            allOf:
              - $ref: '#/components/schemas/TransferObjectCorp'
          sub_amount:
            description: Sub amount /  amount before add fee
            type: integer
            minLength: 1
            example: 2000
          amount:
            description: Amount after add fee
            type: integer
            minLength: 1
            example: 12000
          status:
            description: Status of transfer [click here for detail](#section/Status-of-Transaction)
            type: string
            enum:
              - Refund
              - Completed
              - Pending
              - Failed
            minLength: 1
            example: Completed
    InquiryBankPayload:
      type: object
      properties:
        account_number:
          description: Account number
          type: string
          minLength: 1
          example: "7734738748"
        bank_code:
          description: Bank code of VA [click here for detail](example.com)
          type: string
          enum:
            - MANDIRI
            - BCA
          minLength: 1
          example: MANDIRI
      required:
      - bank_code
      - account_number
    BulkInquiryBankPayload:
      type: object
      properties:
        reference:
          description: Your reference for this bulk
          type: string
          minLength: 1
          example: "RF238478278324"
        list_bulk:
          description: List bulk
          type: array
          items:
            $ref: '#/components/schemas/InquiryBankPayload'
    
    
    StatusCallback:
      type: object
      properties:
        external_id:
          description: You unique id, reference for recon
          type: string
          example: s324ghq435da99sadsda234234'
        corporate_id:
          description: Corporate ID
          type: string
          minLength: 1
          example: '5ed5241591f9651c9435d7e6'
        transaction_code:
          description: Transaction code
          type: string
          minLength: 1
          example: 'trx:20220801104104:897452:1'
        amount:
          description: Amount after add fee
          type: integer
          minLength: 1
          example: 12000
        status:
          description: Status of transfer [click here for detail](#section/Status-of-Transaction)
          type: string
          enum:
            - Refund
            - Completed
            - Pending
            - Failed
          minLength: 1
          example: Completed
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    TopupCallback:
      type: object
      properties:
        balance_id:
          description: Balance ID
          type: string
          example: s324ghq435da99sadsda234234'
        owner:
          description: Owner of balance
          allOf:
            - $ref: '#/components/schemas/Owner'
        corporate_id:
          description: Corporate ID
          type: string
          minLength: 1
          example: '5ed5241591f9651c9435d7e6'
        transaction_code:
          description: Transaction code
          type: string
          minLength: 1
          example: 'trx:20220801104104:897452:1'
        amount:
          description: Amount after add fee
          type: integer
          minLength: 1
          example: 12000
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    AcceptPaymentCallback:
      type: object
      properties:
        external_id:
          description: Your reference
          type: string
          minLength: 1
          example: '5ed5241591f9651c9435d7e6'
        balance_id:
          description: Balance ID
          type: string
          example: s324ghq435da99sadsda234234'
        owner:
          description: Owner of balance
          allOf:
            - $ref: '#/components/schemas/Owner'
        corporate_id:
          description: Corporate ID
          type: string
          minLength: 1
          example: '5ed5241591f9651c9435d7e6'
        transaction_code:
          description: Transaction code
          type: string
          minLength: 1
          example: 'trx:20220801104104:897452:1'
        amount:
          description: Amount after add fee
          type: integer
          minLength: 1
          example: 12000
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
    BulkInquiryCallback:
      type: object
      properties:
        corporate_id:
          description: Corporate ID
          type: string
          minLength: 1
          example: '5ed5241591f9651c9435d7e6'
        actor:
          description: Actor of bulk
          allOf:
            - $ref: '#/components/schemas/Owner'
        bulk_id:
          description: ID of Bulk
          type: string
          example: s324ghq435da99sadsda234234'
        status:
          description: Status of bulk
          type: string
          example: Completed'
        time:
          description: Timestamp
          type: string
          format: '2006-01-02 15:04:05'
          example: '2020-05-07 19:55:06'
  requestBodies:
    CreatePaymentPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/CreatePaymentPayload'
      description: Object / Payload you need to send
      required: true
    CancelPaymentPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/CancelPaymentPayload'
      description: Object / Payload you need to send
      required: true
    SignupPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/SignupPayload'
      description: Object / Payload you need to send
      required: true
    ActivationPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ActivationPayload'
      description: Object / Payload you need to send
      required: true
    UpgradeUserPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/UpgradeUserPayload'
      description: Object / Payload you need to send
      required: true
    PreloginPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/PreloginPayload'
      description: Object / Payload you need to send
      required: true
    LoginPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/LoginPayload'
      description: Object / Payload you need to send
      required: true
    LoginFacePayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/LoginFacePayload'
      description: Object / Payload you need to send
      required: true
    SavePINPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/SavePINPayload'
      description: Object / Payload you need to send
      required: true
    ChangePINPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ChangePINPayload'
      description: Object / Payload you need to send
      required: true
    PreForgotPINPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/PreForgotPINPayload'
      description: Object / Payload you need to send
      required: true
    ForgotPINPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ForgotPINPayload'
      description: Object / Payload you need to send
      required: true
    FaceAsPINPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/FaceAsPINPayload'
      description: Object / Payload you need to send
      required: true
    TemporaryPINPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/TemporaryPINPayload'
      description: Object / Payload you need to send
      required: true
    Pet:
      content:
        application/json:
          schema:
            allOf:
              - description: My Pet
                title: Pettie
              - $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            type: 'object'
            properties:
              name:
                type: string
                description: hooray
      description: Pet object that needs to be added to the store
      required: true
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
    PhonebookCheckPayload:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PhonebookCheckPayload'
      description: List of another user base on phonebook
      required: true
    BankAccountkPayload:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BankAccount'
      description: Object / Payload you need to send
      required: true
    FetchUserBalancePayload:
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/FetchUserBalancePayload'
      description: Object / Payload you need to send
      required: true
    CreateBalancePayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/CreateBalancePayload'
      description: Object / Payload you need to send
      required: true
    ShareBalancePayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ShareBalancePayload'
      description: Object / Payload you need to send
      required: true
    RevokeBalancePayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/RevokeBalancePayload'
      description: Object / Payload you need to send
      required: true
    TransferPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/TransferPayload'
      description: Object / Payload you need to send
      required: true
    TransferBalancePayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/TransferBalancePayload'
      description: Object / Payload you need to send
      required: true
    InquiryBankPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/InquiryBankPayload'
      description: Object / Payload you need to send
    BulkInquiryBankPayload:
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BulkInquiryBankPayload'
      description: Object / Payload you need to send
  securitySchemes:
    petstore_auth:
      description: |
        Get access to data while protecting your account credentials.
        OAuth2 is also a safer and more secure way to give you access.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      description: >
        For this sample, you can use the api key `special-key` to test the
        authorization filters.
      type: apiKey
      name: api_key
      in: header
  examples:
    Order:
      value:
        quantity: 1
        shipDate: '2018-10-19T16:46:45Z'
        status: placed
        complete: false
x-webhooks:
  statusCallback:
    post:
      summary: Status Callback
      description: |
        Status transaction notification

        Note:
        - **Takeme attempts to redeliver the callback until you return HTTP status 200. After the first callback failed (or you did not return 200) we will redeliver the callback in next 5 minutes if failed again we will call in next 25 minutes, 125 minutes, 625 minutes, 3125 minutes**
        - **Callback not notifying pending status**
        - **Callback timeout 30 second**
      operationId: callbackStatusTransaction
      tags:
        - Callback Transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StatusCallback"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
  topupCallback:
    post:
      summary: Topup Callback
      description: |
        Topup notification

        Note:
        - **Takeme attempts to redeliver the callback until you return HTTP status 200. After the first callback failed (or you did not return 200) we will redeliver the callback in next 5 minutes if failed again we will call in next 25 minutes, 125 minutes, 625 minutes, 3125 minutes**
        - **Callback not notifying pending status**
        - **Callback timeout 30 second**
      operationId: callbackTopup
      tags:
        - Callback Transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopupCallback"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
  acceptPaymentCardCallback:
    post:
      summary: Accept Payment Card Callback
      description: |
        Accept Payment notification

        Note:
        - **Takeme attempts to redeliver the callback until you return HTTP status 200. After the first callback failed (or you did not return 200) we will redeliver the callback in next 5 minutes if failed again we will call in next 25 minutes, 125 minutes, 625 minutes, 3125 minutes**
        - **Callback not notifying pending status**
        - **Callback timeout 30 second**
      operationId: callbackAcceptPaymentCard
      tags:
        - Callback Transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptPaymentCallback"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
  deductCallback:
    post:
      summary: Deduct Callback
      description: |
        Deduct notification

        Note:
        - **Takeme attempts to redeliver the callback until you return HTTP status 200. After the first callback failed (or you did not return 200) we will redeliver the callback in next 5 minutes if failed again we will call in next 25 minutes, 125 minutes, 625 minutes, 3125 minutes**
        - **Callback not notifying pending status**
        - **Callback timeout 30 second**
      operationId: callbackDeduct
      tags:
        - Callback Transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopupCallback"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
  bulkInquiryCallback:
    post:
      summary: Bulk Inquiry Callback
      description: |
        Bulk inquiry notification

        Note:
        - **Takeme attempts to redeliver the callback until you return HTTP status 200. After the first callback failed (or you did not return 200) we will redeliver the callback in next 5 minutes if failed again we will call in next 25 minutes, 125 minutes, 625 minutes, 3125 minutes**
        - **Callback not notifying pending status**
        - **Callback timeout 30 second**
      operationId: bulkInquiry
      tags:
        - Callback Bulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkInquiryCallback"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
              